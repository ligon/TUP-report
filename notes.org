* Construction of First Principal Components
  :PROPERTIES:
  :EXPORT_FILE_NAME: principal_component.ipynb
  :END:
  For some groups of questions it's interesting to construct some
  summary measure.  For example, we ask about the value of savings
  held at banks, at home, with BRAC, with other NGOs, and in other
  forms:
    #+name: list_items
    - savings_home_b
    - savings_bank_b
    - savings_BRAC_b
    - savings_NGOs_b
    - savings_other_b


  One obvious approach is to compute the sum of these, but what if
  some forms of savings are missing?  Should we assume these to be
  zero?  There are also valid zeros for different forms of savings
  (indeed, almost no one reports saving with any other NGO).


  The following code computes the first principal component of the
  variables in =list_items=, via a singular value decomposition and
  reports two outputs.  The first are the weights used to compute the
  first principal components, while the second is a histogram of the
  log of positive values of the first principal components.

#+begin_src ipython :results output :var x=list_items
from itertools import chain
import pandas as pd
import numpy as np
from cfe.estimation import svd_missing, drop_columns_wo_covariance
import matplotlib.pyplot as plt

x = list(chain.from_iterable(x))

baseline = pd.read_stata('../TUP-data/data/Baseline/TUP_baseline.dta').set_index('idno')[x]

# Drop households with all missing
baseline = baseline.loc[baseline.count(axis=1)>0,:]

# Drop any columns with too few observations to compute covariance matrix
baseline = drop_columns_wo_covariance(baseline)

u,s,vt = svd_missing(baseline.T,max_rank=1)

u = pd.DataFrame(u,index=baseline.columns)
vt = pd.DataFrame(vt,index=baseline.index)

print(u)

np.log(vt.loc[vt[0]>0,:]).hist(bins=20)

plt.xlabel('Log of first principal component')
plt.savefig('principal_components.png')
#+end_src

#+results:
:results:
                        0
savings_home_b   0.207026
savings_bank_b   0.978304
savings_BRAC_b   0.007643
savings_NGOs_b   0.000640
savings_other_b  0.001666
:end:

[[file:principal_components.png]]
  

* Application of eligiblity criteria
  There are supposed to be eight criteria.  A household is *not*
  eligible if any of the following hold:
   1. A household member has a salaried job.

#+begin_src python
import pandas as pd

census = pd.read_csv('../TUP-data/csv/Census_database.csv')

# Inclusion criteria; need at least 3
criteria = (census.day_labor == 'Yes') + 0
criteria = criteria + (census.child_total>=2)
criteria = criteria + (census.childlabor > 0) + 0
criteria = criteria + (census.houses <= 3) + 0
criteria = criteria + ((census.highestedu == ' primary') | (census.highestedu == 'bellow primary')) + 0

census['Eligible'] =  (criteria>=3)
print('Ineligible because not enough criteria satisfied: %g' % (1-census['Eligible'].mean(),))

census['Eligible'] =  census['Eligible'] & ((census.how_poor != 'well off') | (census.how_poor != 'rich'))
print('Ineligible because subjectively assessed non-poor: %g' % (1-census['Eligible'].mean(),))

census['Eligible'] =  census['Eligible'] & (census.salaried != 'Yes')
print('Ineligible because of salaried occupation: %g' % (1-census['Eligible'].mean(),))

census['Eligible'] =  census['Eligible'] & (census.NGO != 'Yes')
print('Ineligible because of other NGO: %g' % (1-census['Eligible'].mean(),))

census['Eligible'] =  census['Eligible'] & (census.homestead_land=='Yes')
print('Ineligible because of no access to land: %g' % (1-census['Eligible'].mean(),))

#+end_src

#+results:
: Ineligible because not enough criteria satisfied: 0.502737
: Ineligible because subjectively assessed non-poor: 0.502737
: Ineligible because of salaried occupation: 0.557467
: Ineligible because of other NGO: 0.57545
: Ineligible because of no access to land: 0.589523


* Munshi's March 2021 notes
  1. Do we need to spend so much discussing balance and
     attrition. It's until Table 8 that we start discussing
     findings. It's true that we have a somewhat unusual situation of
     having a few HHs missing at baseline but found later. But I feel
     we can just keep the explanations in the text, and just show one
     balance table in Annex. Similarly for attrition, we can show one
     table for just attrition rates by arms and F-test for
     differential attritions (instead of the long tables). Hopefully,
     the second one is also not significant and we can do without
     having to do IPW etc.

  2. I think we need to make a few decisions about the outcomes of monetary values. 
     a. I feel looking at the sub-sample conditional on having
        something (asset, savings) is always going to be marky. Could
        we not just put zero and include them all in regressions?
     b. We currently have log for savings etc (Table 10), but not for
        asset, income and expenditure. Could we do uniformly? I don't
        have a strong preference for log/no log (and would rely on
        your opinion). If not log, do we need to winsorize for
        outliers?
     c. I like the flow of outcome indicators - asset,
        savings/transfer, income, expenditure. I was wondering if we
        could also be consistent in showing dummies and then
        values. Currently we have it for savings stuffs (Table 9 and
        10), but could do the same for assets and income?

     d. I was wondering if we can just make a food insecurity index out of the indicators in table 13, and add it to the expenditures table?

  3. A few minor things for presenting the tables:
    - I wasn't sure if the control means are for baseline or overall? Need to specify
    - perhaps we can drop the baseline and baseline missings from the table. I don't think they tell us anything as such, and we can just menton in footnote that we controlled for them. 
    - should we try to deflate the values to 2013 price? It might be tricky given the massive official and market exchange rate differences, If we don't, we can mention hyperinflation and exchange rate complexity as reasons. In that case, we can also drop the year dummies perhaps?

